{
  "version": 3,
  "sources": ["global-externals:@storybook/addons", "../../../node_modules/@storybook/addon-links/dist/esm/constants.js", "../../../node_modules/@storybook/addon-links/dist/esm/manager.js"],
  "sourcesContent": ["export default __STORYBOOKADDONS__;\nconst { AddonStore, Channel, HooksContext, addons, applyHooks, isSupportedType, makeDecorator, mockChannel, types, useArgs, useCallback, useChannel, useEffect, useGlobals, useMemo, useParameter, useReducer, useRef, useState, useStoryContext } = __STORYBOOKADDONS__;\nexport { AddonStore, Channel, HooksContext, addons, applyHooks, isSupportedType, makeDecorator, mockChannel, types, useArgs, useCallback, useChannel, useEffect, useGlobals, useMemo, useParameter, useReducer, useRef, useState, useStoryContext };", "export const ADDON_ID = 'storybook/links';\nexport const PARAM_KEY = `links`;\nexport default {\n  NAVIGATE: `${ADDON_ID}/navigate`,\n  REQUEST: `${ADDON_ID}/request`,\n  RECEIVE: `${ADDON_ID}/receive`\n};", "import { addons } from '@storybook/addons';\nimport EVENTS, { ADDON_ID } from './constants';\naddons.register(ADDON_ID, api => {\n  const channel = addons.getChannel();\n  channel.on(EVENTS.REQUEST, ({\n    kind,\n    name\n  }) => {\n    const id = api.storyId(kind, name);\n    api.emit(EVENTS.RECEIVE, id);\n  });\n});"],
  "mappings": "AAAA,GAAO,GAAQ,oBACT,CAAE,aAAY,UAAS,eAAc,SAAQ,aAAY,kBAAiB,gBAAe,cAAa,QAAO,UAAS,cAAa,aAAY,YAAW,aAAY,UAAS,eAAc,aAAY,SAAQ,WAAU,mBAAoB,oBCD9O,GAAM,GAAW,kBAExB,GAAO,GAAQ,CACb,SAAU,GAAG,aACb,QAAS,GAAG,YACZ,QAAS,GAAG,WACd,ECJA,EAAO,SAAS,EAAU,GAAO,CAE/B,AADgB,EAAO,WAAW,EAC1B,GAAG,EAAO,QAAS,CAAC,CAC1B,OACA,UACI,CACJ,GAAM,GAAK,EAAI,QAAQ,EAAM,CAAI,EACjC,EAAI,KAAK,EAAO,QAAS,CAAE,CAC7B,CAAC,CACH,CAAC",
  "names": []
}
